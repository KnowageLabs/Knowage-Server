/*
 * Knowage, Open Source Business Intelligence suite
 * Copyright (C) 2016 Engineering Ingegneria Informatica S.p.A.
 * 
 * Knowage is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knowage is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package it.eng.spagobi.analiticalmodel.document.metadata;

import it.eng.spagobi.commons.metadata.SbiHibernateModel;


/**
 * SbiObjFunc generated by hbm2java
 */
public class SbiObjFunc extends SbiHibernateModel implements  Comparable {

    // Fields    

     private SbiObjFuncId id;
     private Integer prog;


    // Constructors

    /**
     * default constructor.
     */
    public SbiObjFunc() {
    }
    
    /**
     * constructor with id.
     * 
     * @param id the id
     */
    public SbiObjFunc(SbiObjFuncId id) {
        this.id = id;
    }
   
    
    

    // Property accessors

    /**
     * Gets the id.
     * 
     * @return the id
     */
    public SbiObjFuncId getId() {
        return this.id;
    }
    
    /**
     * Sets the id.
     * 
     * @param id the new id
     */
    public void setId(SbiObjFuncId id) {
        this.id = id;
    }

    /**
     * Gets the prog.
     * 
     * @return the prog
     */
    public Integer getProg() {
        return this.prog;
    }
    
    /**
     * Sets the prog.
     * 
     * @param prog the new prog
     */
    public void setProg(Integer prog) {
        this.prog = prog;
    }

	/* (non-Javadoc)
	 * @see java.lang.Comparable#compareTo(T)
	 */
	public int compareTo(Object obj2) {
		SbiObjFunc sbiObjFunc2 = (SbiObjFunc) obj2;
		String path2 = sbiObjFunc2.getId().getSbiFunctions().getPath();
		String thisPath = this.getId().getSbiFunctions().getPath();
		int folderComparison = thisPath.compareTo(path2);
		if (folderComparison == 0) {
			SbiObjects sbiObj1 = this.getId().getSbiObjects();
			SbiObjects sbiObj2 = sbiObjFunc2.getId().getSbiObjects();
			String sbiObjName1 = sbiObj1.getLabel();
			String sbiObjName2 = sbiObj2.getLabel();
			return sbiObjName1.compareTo(sbiObjName2);
		} else {
			return folderComparison;
		}

	}

}