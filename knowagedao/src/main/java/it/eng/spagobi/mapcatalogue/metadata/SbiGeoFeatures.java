/*
 * Knowage, Open Source Business Intelligence suite
 * Copyright (C) 2016 Engineering Ingegneria Informatica S.p.A.
 * 
 * Knowage is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knowage is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package it.eng.spagobi.mapcatalogue.metadata;


// Generated 31-mag-2007 14.53.27 by Hibernate Tools 3.2.0.beta8

import it.eng.spagobi.commons.metadata.SbiHibernateModel;
import it.eng.spagobi.mapcatalogue.bo.GeoFeature;

import java.util.Set;

/**
 * SbiGeoFeatures generated by hbm2java
 */
public class SbiGeoFeatures extends SbiHibernateModel {

	// Fields    

	private int featureId;

	private String name;

	private String descr;

	private String type;

	//private Set sbiGeoMapFeatureses = new HashSet(0);

	// Constructors

	/**
	 * default constructor.
	 */
	public SbiGeoFeatures() {
	}

	/**
	 * minimal constructor.
	 * 
	 * @param featureId the feature id
	 */
	public SbiGeoFeatures(int featureId) {
		this.featureId = featureId;
	}

	/**
	 * full constructor.
	 * 
	 * @param featureId the feature id
	 * @param name the name
	 * @param descr the descr
	 * @param type the type
	 * @param sbiGeoMapFeatureses the sbi geo map featureses
	 */
	public SbiGeoFeatures(int featureId, String name, String descr,
			String type, Set sbiGeoMapFeatureses) {
		this.featureId = featureId;
		this.name = name;
		this.descr = descr;
		this.type = type;
	//	this.sbiGeoMapFeatureses = sbiGeoMapFeatureses;
	}

	// Property accessors
	/**
	 * Gets the feature id.
	 * 
	 * @return the feature id
	 */
	public int getFeatureId() {
		return this.featureId;
	}

	/**
	 * Sets the feature id.
	 * 
	 * @param featureId the new feature id
	 */
	private void setFeatureId(int featureId) {
		this.featureId = featureId;
	}

	/**
	 * Gets the name.
	 * 
	 * @return the name
	 */
	public String getName() {
		return this.name;
	}

	/**
	 * Sets the name.
	 * 
	 * @param name the new name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Gets the descr.
	 * 
	 * @return the descr
	 */
	public String getDescr() {
		return this.descr;
	}

	/**
	 * Sets the descr.
	 * 
	 * @param descr the new descr
	 */
	public void setDescr(String descr) {
		this.descr = descr;
	}

	/**
	 * Gets the type.
	 * 
	 * @return the type
	 */
	public String getType() {
		return this.type;
	}

	/**
	 * Sets the type.
	 * 
	 * @param type the new type
	 */
	public void setType(String type) {
		this.type = type;
	}
/*
	public Set getSbiGeoMapFeatureses() {
		return this.sbiGeoMapFeatureses;
	}

	public void setSbiGeoMapFeatureses(Set sbiGeoMapFeatureses) {
		this.sbiGeoMapFeatureses = sbiGeoMapFeatureses;
	}
*/

	/**
	 * From the Hibernate Feature object at input, gives the corrispondent
	 * <code>GeoFeature</code> object.
	 * 
	 * @param hibFeature The Hibernate Feature object
	 * 
	 * @return the corrispondent output <code>GeoFeature</code>
	 */
	public GeoFeature toGeoFeature(){
		
		GeoFeature feature = new GeoFeature();
		feature.setFeatureId(getFeatureId());
		feature.setName(getName());
		feature.setDescr(getDescr());
		feature.setType(getType());
	
		/*
		List maps = new ArrayList();	
		Set hibMaps = hibFeature.getSbiGeoMapFeatureses();			
		for (Iterator it = hibMaps.iterator(); it.hasNext(); ) {
			SbiGeoMapFeatures hibMapFeatures = (SbiGeoMapFeatures) it.next();				
			Integer mapId = hibMapFeatures.getId().getFeatureId();				
			maps.add(mapId);
		}
			
		feature.setBiMaps(maps);
		*/
		return feature;
	}


}
