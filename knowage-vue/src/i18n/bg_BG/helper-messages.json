{
  "dataPreparation": {
    "abs": "Връща абсолютната стойност на цифровата стойност.",
    "acos": "Връща обратния косинс (a.k.a. a. arc cosine) на експр, сякаш се изчисли от java.lang.Math.acos.",
    "add_months": "Връща датата, която е num_months след start_date.",
    "approx_percentile": "Връща приблизителния персентил на цифровата колона col, която е най-малката стойност в поръчаните стойности на col (сортирани от най-малко до най-големи), такива, че не повече от процент от стойностите на col е по-малък от стойността или равен на тази стойност. Стойността на процента трябва да бъде между 0.0 и 1.0. Параметърът за точност (по подразбиране: 10000) е положителен цифров буквал, който контролира точността на приближение с цената на паметта. По-високата стойност на точността дава по-добра точност, 1.0/точност е относителната грешка на приближението. Когато процентът е масив, всяка стойност на процентния масив трябва да бъде между 0.0 и 1.0. В този случай връща приблизителния персентилен масив на колона col при дадения процентен масив.",
    "asin": "Връща обратния синус (a.k.a. дъгов синус) дъговия грях на expr, сякаш се изчисли от java.lang.Math.asin.",
    "atan": "Връща обратната допирателна (a.k.a. дъга тангента) на експр, сякаш се изчисли от java.lang.Math.atan",
    "avg": "Връща средната стойност, изчислена от стойности на група.",
    "casewhen": "Когато expr1 = вярно, връща expr2; друго, когато expr3 = вярно, връща expr4; друго връща expr5. Аргументи: <br> expr1, expr3 - изразите на състоянието на клона трябва всички да бъдат булеви тип. <br> expr2, expr4, expr5 - изразите на стойността на клона и друг израз на стойност трябва всички да са от същия тип или принуда за общ тип.",
    "char_length": "Връща дължината на знака на низ данни или брой байтове двоични данни. Дължината на низ данни включва крайните интервали. Дължината на двоичните данни включва двоични нули.",
    "coalesce": "Връща първия не-null аргумент, ако съществува. В противен случай, null.",
    "concat": "Връща конкатенцията на col1, col2, ..., colN.",
    "cos": "Връща косината на експр, сякаш се изчисли от java.lang.Math.cos.",
    "current_date": "Връща текущата дата в началото на оценката на заявката.",
    "current_timestamp": "Връща текущото клеймо в началото на оценката на заявката.",
    "date_add": "Връща датата, която е num_days след start_date.",
    "date_sub": "Връща датата, която е num_days преди start_date.",
    "date_trunc": "Връща клеймо ts орязани към единицата, зададена от формат модел fmt. FMT трябва да бъде една от [\"ГОДИНА\", \"ГГГГ\", \"ГГГ\", \"МОН\", \"МЕСЕЦ\", \"ММ\", \"ДЕН\", \"ДД\", \"ЧАС\", \"МИНУТА\", \"ВТОРА\", \"СЕДМИЦА\", \"ТРИМЕСЕЧИЕ\"]",
    "datediff": "Връща броя на дните от startDate до краяДата.",
    "day": "Връща деня от месеца на датата/клеймото.",
    "dayofmonth": "Връща деня от месеца на датата/клеймото.",
    "dayofweek": "Връща деня от седмицата за дата/клеймо (1 = неделя, 2 = понеделник, ..., 7 = събота).",
    "dayofyear": "Връща деня от годината на датата/клеймото.",
    "dense_rank": "Изчисли ранга на стойност в група от стойности. Резултатът е един плюс предварително присвоената стойност на ранга. За разлика от ранга на функцията, dense_rank няма да произвежда пропуски в последователността на класирането.",
    "element_at": "Връща елемент от масива при даден (1-базиран) индекс. Ако индекс < 0, accesses elements from the last to the first. Returns NULL if the index exceeds the length of the array.",
    "element_at2": "Връща стойност за даден ключ или NULL, ако ключът не се съдържа в картата",
    "exists": "Тества дали предикат държи за един или повече елементи в масива.",
    "exp": "Връща e към силата на експр.",
    "factorial": "Връща фактора на експр. expr е [0..20]. В противен случай, null.",
    "floor": "Връща най-голямото цяло число не по-голямо от expr.",
    "format_string": "Връща форматиран низ от низове във формат в стил PrintF.",
    "hint": "Кликнете върху една от изброените функции, за да получите повече информация за него",
    "hour": "Връща часовия компонент на низа/клеймото.",
    "if": "Ако expr1 оценява на вярно, тогава връща expr2; в противен случай връща expr3.",
    "last_day": "Връща последния ден от месеца, към който принадлежи датата.",
    "lcase": "Връща str с всички знаци, променени на малки букви.",
    "left": "Връща най-левия len(len може да бъде тип низ) знаци от низа str,ако len е по-малко или равно от 0 резултатът е празен низ.",
    "length": "Връща дължината на знака на низ данни или брой байтове двоични данни. Дължината на низ данни включва крайните интервали. Дължината на двоичните данни включва двоични нули.",
    "ln": "Връща естествения логаритм (основа д) на експр.",
    "locate": "Връща позицията на първото появяване на substr в str след позиция POS. Дадената пос и възвращаемост стойност са 1 базирани.",
    "log": "Връща логаритма на експр с основа.",
    "lower": "Връща str с всички знаци, променени на малки букви.",
    "lpad": "Връща str, лява подплатена с подложка до дължина лен. Ако STR е по-дълъг от len, стойността на връщане се съкращава до len знаци.",
    "ltrim1": "Премахва водещите космически знаци от стр.",
    "ltrim2": "Премахва водещия низ съдържа знаците от низа за подстригване",
    "max": "Връща максималната стойност на expr",
    "mean": "Връща средната стойност, изчислена от стойности на група.",
    "min": "Връща минималната стойност на expr",
    "minute": "Връща минутния компонент на низа/клеймото.",
    "mod": "Връща остатъка след expr1/expr2.",
    "month": "Връща компонента месец на датата/клеймото.",
    "months_between": "Ако клеймо1 е по-късно от клеймо2, тогава резултатът е положителен. Ако клеймо1 и клеймо2 са в един и същи ден от месеца, или и двата са последният ден от месеца, времето на деня ще бъде пренебрегнато. В противен случай разликата се изчислява въз основа на 31 дни на месец, и се закръглява до 8 цифри, освен ако roundOff=false.",
    "next_day": "Връща първата дата, която е по-късна от start_date и наименувана, както е посочено.",
    "not": "Логично не.",
    "nullif": "Връща null, ако expr1 се равнява на expr2, или expr1 друго.",
    "nvl": "Връща expr2, ако expr1 е null, или expr1 друго.",
    "percent_rank": "Изчисли процентното класиране на стойност в група от стойности.",
    "percentile1": "Връща точната персентилна стойност на цифрова колона col при дадения процент. Стойността на процента трябва да бъде между 0.0 и 1.0. Стойността на честотата трябва да бъде положителна интегрална",
    "percentile2": "Връща точния масив от процентилни стойности на числова колона col при дадения(те) процент(и). Всяка стойност на процентния масив трябва да бъде между 0.0 и 1.0. Стойността на честотата трябва да бъде положителна интегрална",
    "pow": "Повдига expr1 до силата на expr2.",
    "quarter1": "Връща тримесечието на годината за дата, в диапазона от 1 до 4.",
    "quarter2": "Връща тримесечието на годината за дата, в диапазона от 1 до 4.",
    "replace": "Заменя всички събития на търсене със замяна.",
    "round": "Връща експр, закръглена до десетичните знаци d, като използва HALF_UP режим на закръгляване.",
    "rtrim1": "Премахва знаците за плаващо пространство от стр.",
    "rtrim2": "Премахва плаващия низ, който съдържа знаците от низа за подстригване от низа",
    "second": "Връща втория компонент на низа/клеймото.",
    "sha": "Връща sha1 хеш стойност като хекс низ на експр.",
    "sin": "Връща синуса на експр, сякаш се изчисли от java.lang.Math.sin.",
    "skewness": "Връща стойността на шишчетата, изчислена от стойности на група.",
    "stddev": "Връща примерното стандартно отклонение, изчислено от стойности на група.",
    "stddev_pop": "Връща стандартното отклонение на генералната съвкупност, изчислено от стойности на група.",
    "stddev_samp": "Връща примерното стандартно отклонение, изчислено от стойности на група.",
    "substr": "Връща подструната на str, която започва от пос и е с дължина len, или парчето байт масив, който започва от пос и е с дължина len.",
    "tan": "Връща тангентата на експр, сякаш се изчисли от java.lang.Math.tan.",
    "timestamp": "Хвърля стойността експр на целевия тип данни клеймо.",
    "to_date": "Анализира date_str израз с fmt израза до дата. Връща null с невалиден вход. По подразбиране следва правила за леене до дата, ако FMT е пропусната.",
    "to_timestamp": "Анализира timestamp_str израз с израза fmt към клеймо. Връща null с невалиден вход. По подразбиране следва правила за леене към клеймо, ако fmt е пропуснато.",
    "trim": "trim(str) - Премахва водещите и крайните космически знаци от стр. <br>        trim(BOTH trimStr FROM str) - Премахване на водещите и крайните trimStr знаци от str <br>        trim(ВОДЕЩ trimStr FROM str) - Премахнете водещите знаци trimStr от str <br>        подстригване(TRAILING trimStr FROM str) - Премахване на крайните trimStr знаци от str <br>        Аргументи: <br>        str - низ израз <br>        trimStr - знаците на низа за подстригване, стойността по подразбиране е едно пространство <br>        И ДВЕТЕ, ОТ - това са ключови думи, за да зададете подстригване низ знаци от двата края на низа <br>        ВОДЕЩО, ОТ - това са ключови думи, за да зададете знаци за низ за подстригване от левия край на низа <br>        TRAILING, FROM - това са ключови думи, за да зададете знаци за подстригване на низ от десния край на низа",
    "ucase": "Връща str с всички знаци, променени на главни.",
    "upper": "Връща str с всички знаци, променени на главни.",
    "variance": "Връща примерния варианс, изчислен от стойности на група.",
    "weekday": "Връща деня от седмицата за дата/клеймо (0 = понеделник, 1 = вторник, ..., 6 = неделя).",
    "weekofyear": "Връща седмицата от годината на дадената дата. Седмица се счита да започне в понеделник и седмица 1 е първата седмица с >3 дни.",
    "year": "Връща компонента на годината на датата/клеймото."
  }
}
