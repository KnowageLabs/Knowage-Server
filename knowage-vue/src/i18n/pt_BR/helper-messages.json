{
  "dataPreparation": {
    "abs": "Retorna o valor absoluto do valor numérico.",
    "acos": "Retorna o cosseno inverso (também conhecido como cosseno arco) de expr, como se computado por java.lang.Math.acos.",
    "add_months": "Retorna a data que é num_months após start_date.",
    "approx_percentile": "Retorna o percentil aproximado do col de coluna numérica que é o menor valor nos valores col ordenados (classificados de pelo menos para maior) de tal forma que não mais do que porcentagem de valores col é menor do que o valor ou igual a esse valor. O valor do percentual deve ser entre 0,0 e 1,0. O parâmetro de precisão (padrão: 10000) é um literal numérico positivo que controla a precisão de aproximação ao custo da memória. Maior valor de precisão produz melhor precisão, 1.0/precisão é o erro relativo da aproximação. Quando a porcentagem é uma matriz, cada valor da matriz percentual deve ser entre 0,0 e 1,0. Neste caso, retorna a matriz percentil aproximada do col de coluna na matriz percentual dada.",
    "asin": "Retorna o seno inverso (também conhecido como arc sine) o pecado arco de expr, como se computado por java.lang.Math.asin.",
    "atan": "Retorna a tangente inversa (também conhecida como teimosina arc) de expr, como se computada por java.lang.Math.atan",
    "avg": "Retorna a média calculada a partir dos valores de um grupo.",
    "casewhen": "Quando expr1 = verdadeiro, retorna expr2; mais quando expr3 = verdadeiro, retorna expr4; outra vez retorna expr5. Argumentos: <br> expr1, expr3 - as expressões de condição do ramo devem ser todas do tipo booleano. <br> expr2, expr4, expr5 - as expressões de valor do ramo e a expressão de valor do ramo devem ser todos do mesmo tipo ou coerciveis para um tipo comum.",
    "char_length": "Retorna o comprimento do caractere de dados de sequência ou número de bytes de dados binários. O comprimento dos dados de sequência inclui os espaços de arrasto. O comprimento dos dados binários inclui zeros binários.",
    "coalesce": "Retorna o primeiro argumento não nulo se existir. Caso contrário, nulo.",
    "concat": "Retorna a concatenação de col1, col2, ..., colN.",
    "cos": "Retorna o cosseno de expr, como se computado por java.lang.Math.cos.",
    "current_date": "Retorna a data atual no início da avaliação da consulta.",
    "current_timestamp": "Retorna o data-hora atual no início da avaliação da consulta.",
    "date_add": "Retorna a data que é num_days após start_date.",
    "date_sub": "Retorna a data que num_days antes start_date.",
    "date_trunc": "Retorna ts ts de data de tempo truncados à unidade especificada pelo modelo de formato fmt. fmt deve ser um de [\"ANO\", \"YYYY\", \"YY\", \"MON\", \"MÊS\", \"MM\", \"DIA\", \"DD\", \"HORA\", \"MINUTO\", \"SEGUNDA\", \"SEMANA\", \"TRIMESTRE\"]",
    "datediff": "Retorna o número de dias desde o inícioDate até o endDate.",
    "day": "Retorna o dia do mês da data/horário.",
    "dayofmonth": "Retorna o dia do mês da data/horário.",
    "dayofweek": "Retorna o dia da semana para data/horário (1 = domingo, 2 = segunda-feira, ..., 7 = sábado).",
    "dayofyear": "Retorna o dia do ano da data/data.o., o que é um dia.",
    "dense_rank": "Calcula a classificação de um valor em um grupo de valores. O resultado é um mais o valor de classificação anteriormente atribuído. Ao contrário do ranking de funções, dense_rank não produzirá lacunas na sequência de classificação.",
    "element_at": "Elemento de retorno da matriz no índice (baseado em 1). Se índice < 0, accesses elements from the last to the first. Returns NULL if the index exceeds the length of the array.",
    "element_at2": "Valor de devolução para determinada chave ou NULO se a chave não estiver contida no mapa",
    "exists": "Testa se um predicado se mantém para um ou mais elementos na matriz.",
    "exp": "Retorna e ao poder de expr.",
    "factorial": "Retorna o fatorial de expr. expr é [0..20]. Caso contrário, nulo.",
    "floor": "Devolve o maior inteiro não maior que expr.",
    "format_string": "Retorna uma sequência formatada de strings de formato estilo printf.",
    "hint": "Clique em uma das funções listadas para obter mais informações sobre ele",
    "hour": "Retorna o componente hora da sequência/do estamp de tempo.",
    "if": "Se expr1 avaliar a verdade, então retorna expr2; caso contrário retorna expr3.",
    "last_day": "Retorna o último dia do mês a que a data pertence.",
    "lcase": "Retorna str com todos os caracteres alterados para minúsculas.",
    "left": "Retorna os caracteres len (len\" mais à esquerda (len pode ser tipo de sequência) do string str, se len for menor ou igual a 0 o resultado é uma sequência vazia.",
    "length": "Retorna o comprimento do caractere de dados de sequência ou número de bytes de dados binários. O comprimento dos dados de sequência inclui os espaços de arrasto. O comprimento dos dados binários inclui zeros binários.",
    "ln": "Retorna o logaritmo natural (base e) de expr.",
    "locate": "Retorna a posição da primeira ocorrência de substr em str após pos posição. O valor dado de pd pd e retorno são baseados em 1.",
    "log": "Retorna o logaritmo de expr com base.",
    "lower": "Retorna str com todos os caracteres alterados para minúsculas.",
    "lpad": "Retorna str, acolchoado à esquerda com almofada a um comprimento de len. Se str for mais longo que len, o valor de retorno é encurtado para caracteres len.",
    "ltrim1": "Remove os principais caracteres espaciais de str.",
    "ltrim2": "Remove a sequência principal contém os caracteres da sequência de corte",
    "max": "Retorna o valor máximo do expr",
    "mean": "Retorna a média calculada a partir dos valores de um grupo.",
    "min": "Devolve o valor mínimo da expr",
    "minute": "Retorna o componente minucioso da sequência/do estamp de tempo.",
    "mod": "Retorna o restante após expr1/expr2.",
    "month": "Retorna o componente mês da data/data.omp.",
    "months_between": "Se o timetamp1 for mais tarde que o timestamp2, então o resultado é positivo. Se o timetamp1 e o timetamp2 estiverem no mesmo dia do mês, ou ambos forem o último dia do mês, a hora do dia será ignorada. Caso contrário, a diferença é calculada com base em 31 dias por mês, e arredondada para 8 dígitos, a menos que roundOff=falso.",
    "next_day": "Retorna a primeira data que é mais tarde do que start_date e nomeado como indicado.",
    "not": "Lógico não.",
    "nullif": "Retorna nulo se expr1 equivale a expr2, ou expr1 caso contrário.",
    "nvl": "Retorna expr2 se expr1 for nulo, ou expr1 caso contrário.",
    "percent_rank": "Calcula o ranking percentual de um valor em um grupo de valores.",
    "percentile1": "Retorna o valor percentual exato do col de coluna numérica na porcentagem dada. O valor do percentual deve ser entre 0,0 e 1,0. O valor da frequência deve ser integral positivo",
    "percentile2": "Retorna a matriz de valor percentil exato do col de coluna numérica na determinada porcentagem(s). Cada valor da matriz percentual deve ser entre 0,0 e 1,0. O valor da frequência deve ser integral positivo",
    "pow": "Eleva a expr1 ao poder do expr2.",
    "quarter1": "Retorna o trimestre do ano para data, na faixa 1 a 4.",
    "quarter2": "Retorna o trimestre do ano para data, na faixa 1 a 4.",
    "replace": "Substitui todas as ocorrências de pesquisa por substituição.",
    "round": "Retorna expr arredondado para d casas decimais usando HALF_UP modo de arredondamento.",
    "rtrim1": "Remove os personagens espaciais de str.",
    "rtrim2": "Remove a sequência que contém os caracteres da corda de corte do str",
    "second": "Retorna o segundo componente da sequência/do porão de tempo.",
    "sha": "Retorna um valor de hash sha1 como uma sequência hexais do expr.",
    "sin": "Retorna o seno de expr, como se computado por java.lang.Math.sin.",
    "skewness": "Retorna o valor de distorção calculado a partir de valores de um grupo.",
    "stddev": "Retorna o desvio padrão da amostra calculado a partir de valores de um grupo.",
    "stddev_pop": "Retorna o desvio padrão populacional calculado a partir de valores de um grupo.",
    "stddev_samp": "Retorna o desvio padrão da amostra calculado a partir de valores de um grupo.",
    "substr": "Retorna o substring de str que começa em pos e é de comprimento len, ou a fatia de byte array que começa em pos e é de comprimento len.",
    "tan": "Retorna a tangente de expr, como se computado por java.lang.Math.tan.",
    "timestamp": "Lança o expr de valor para o data-hora do tipo de destino.",
    "to_date": "Analisa a expressão date_str com a expressão fmt para uma data. Retorna nulo com entrada inválida. Por padrão, ele segue as regras de fundição para uma data se o fmt for omitido.",
    "to_timestamp": "Analisa a expressão timestamp_str com a expressão fmt a um estamp de tempo. Retorna nulo com entrada inválida. Por padrão, ele segue as regras de fundição para um data-de-tempo se o fmt for omitido.",
    "trim": "trim(str) - Remove os caracteres espaciais principais e arrastados de str. <br>        trim (Both trimStr FROM str) - Remova os caracteres principais e de corte de str <br>        trim (guarnição LEADINGStr FROM str) - Remova os caracteres principais trimStr de str <br>        trim (trailing trimStr FROM str) - Remova os caracteres de trimstr trailing de str <br>        Argumentos: <br>        str - uma expressão de corda <br>        trimStr - os caracteres de sequência de corte para aparar, o valor padrão é um único espaço <br>        BOTH, FROM - estas são palavras-chave para especificar aparamento de caracteres de sequência de ambas as extremidades da string <br>        LEADING, FROM - estas são palavras-chave para especificar o corte de caracteres de sequência da extremidade esquerda da string <br>        TRAILING, FROM - estas são palavras-chave para especificar aparamento de caracteres de sequência da extremidade direita da string",
    "ucase": "Retorna str com todos os caracteres alterados para maiústo.",
    "upper": "Retorna str com todos os caracteres alterados para maiústo.",
    "variance": "Retorna a variância amostral calculada a partir de valores de um grupo.",
    "weekday": "Retorna o dia da semana para data/data/horário (0 = segunda-feira, 1 = terça-feira, ..., 6 = domingo).",
    "weekofyear": "Retorna a semana do ano da data dada. Uma semana é considerada para começar em uma segunda-feira e a semana 1 é a primeira semana com >3 dias.",
    "year": "Retorna o componente ano da data/data.apósmp."
  }
}
