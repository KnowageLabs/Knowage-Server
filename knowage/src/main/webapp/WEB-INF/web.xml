<?xml version="1.0" encoding="UTF-8"?>

<web-app
		id="knowage"
		xmlns="http://xmlns.jcp.org/xml/ns/javaee"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
		                    http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
		version="3.1" >

	<display-name>knowage</display-name>
	<description>Main app of the Knowage Suite</description>

	<!-- 
		Logger Setup Filter.
		
		Set the logger according the HTTP request data.
	 -->
	<filter>
		<filter-name>LoggerSetupFilter</filter-name>
		<filter-class>it.eng.knowage.utils.filters.LoggerSetupFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>LoggerSetupFilter</filter-name>
		<dispatcher>REQUEST</dispatcher>
		<url-pattern>/*</url-pattern>
	</filter-mapping>



	<filter>
		<filter-name>EncodingFilter</filter-name>
		<filter-class>it.eng.spagobi.utilities.filters.EncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>EncodingFilter</filter-name>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<url-pattern>/servlet/AdapterHTTP</url-pattern>
		<url-pattern>/public/servlet/AdapterHTTP</url-pattern>
		<url-pattern>/WEB-INF/jsp/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>SpagoBICoreCheckSessionFilter</filter-name>
		<filter-class>it.eng.spagobi.commons.filters.SpagoBICoreCheckSessionFilter</filter-class>
	</filter>
	
	<!--
	<servlet>
		<servlet-name>jersey-serlvet</servlet-name>
		<servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
		<init-param>
			 <param-name>jersey.config.server.provider.packages</param-name>
			 <param-value>it.eng;org.apache.clerezza</param-value>
		</init-param>
		<init-param>
			 <param-name>jersey.config.server.provider.scanning.recursive</param-name>
			 <param-value>true</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>jersey-serlvet</servlet-name>
		<url-pattern>/restful-services/*</url-pattern>
	</servlet-mapping>
	 -->

	<!-- START-CAS ${enable.cas.end}
	<filter>
		<filter-name>CAS Authentication Filter</filter-name>
		<filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
		<init-param>
			<param-name>casServerLoginUrl</param-name>
			<param-value>https://161.27.213.105:48081/cas/login</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>161.27.213.105:48081</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>CAS Validation Filter</filter-name>
		<filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<param-value>https://161.27.213.105:48081/cas/</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>https://161.27.213.105:48081</param-value>
		</init-param>
		<init-param>
			<param-name>proxyReceptorUrl</param-name>
			<param-value>/proxyCallback</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
	</filter>
	${enable.cas.start} END-CAS -->

	<!-- START OAUTH 2
 	<filter>
		<filter-name>OAuthFilter</filter-name>
		<filter-class>it.eng.spagobi.security.OAuth2.OAuth2Filter</filter-class>
	</filter>
 	END OAUTH 2 -->
 	
	<!-- START OAUTH 2 with PKCE
 	<filter>
		<filter-name>OAuth2PKCEFilter</filter-name>
		<filter-class>it.eng.spagobi.security.OAuth2.OAuth2PKCEFilter</filter-class>
	</filter>
 	END OAUTH 2 with PKCE -->

	<!-- This filter tries to create the user profile object before AdapterHTTP servlet execution -->
	<filter>
		<filter-name>ProfileFilter</filter-name>
		<filter-class>it.eng.spagobi.commons.filters.ProfileFilter</filter-class>
	</filter>

	<filter>
		<filter-name>AntiInjectionFilter</filter-name>
		<filter-class>it.eng.spagobi.utilities.filters.AntiInjectionFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>SpagoBICoreCheckSessionFilter</filter-name>
		<dispatcher>REQUEST</dispatcher>
		<url-pattern>/servlet/AdapterHTTP</url-pattern>
		<url-pattern>/public/servlet/AdapterHTTP</url-pattern>
		<url-pattern>/restful-services/publish</url-pattern>
		<url-pattern>/public/restful-services/publish</url-pattern>
	</filter-mapping>

	<!-- START-CAS ${enable.cas.end}
	<filter-mapping>
		<filter-name>CAS Authentication Filter</filter-name>
		<url-pattern>/servlet/AdapterHTTP</url-pattern>
		<url-pattern>/restful-services/publish</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>CAS Validation Filter</filter-name>
		<url-pattern>/servlet/AdapterHTTP</url-pattern>
		<url-pattern>/restful-services/publish</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<url-pattern>/servlet/AdapterHTTP</url-pattern>
		<url-pattern>/restful-services/publish</url-pattern>
	</filter-mapping>
	${enable.cas.start} END-CAS -->

	<!-- START OAUTH 2
	<filter-mapping>
		<filter-name>OAuthFilter</filter-name>
		<url-pattern>/servlet/AdapterHTTP</url-pattern>
	</filter-mapping>
 	END OAUTH 2 -->
 	
	<!-- START OAUTH 2 with PKCE
	<filter-mapping>
		<filter-name>OAuth2PKCEFilter</filter-name>
		<url-pattern>/servlet/AdapterHTTP</url-pattern>
	</filter-mapping>
 	END OAUTH 2 with PKCE -->

	<!-- HmacLoginFilter -->
	<filter>
		<filter-name>HmacLoginFilter</filter-name>
		<filter-class>it.eng.spagobi.commons.filters.HmacLoginFilter</filter-class>
		<init-param>
			<param-name>USERNAME_IN_SESSION</param-name>
			<param-value>hmac_user_name</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>HmacLoginFilter</filter-name>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<url-pattern>/restful-services/publish</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>ProfileFilter</filter-name>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<url-pattern>/servlet/AdapterHTTP</url-pattern>
		<url-pattern>/restful-services/publish</url-pattern>
		<url-pattern>/public/restful-services/publish</url-pattern>
		<url-pattern>/public/servlet/AdapterHTTP</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>ProfileFilter</filter-name>
		<dispatcher>FORWARD</dispatcher>
		<url-pattern>/WEB-INF/jsp/*</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>AntiInjectionFilter</filter-name>
		<url-pattern>/servlet/AdapterHTTP</url-pattern>
	</filter-mapping>

	
	
	<!-- If you want to enable HMAC filter:
		Add the hmac key into server.xml :
			<Environment description="HMAC key" name="hmacKey" type="java.lang.String" value="abc123"/>

		Link the key to all engines :
			<ResourceLink name="hmacKey" global="hmacKey" type="java.lang.String"/>
		Enable the filter uncommenting the following lines -->
	<!-- HMAC filter-->
	<filter>
		<filter-name>HMACFilter</filter-name>
		<filter-class>it.eng.spagobi.security.hmacfilter.HMACFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HMACFilter</filter-name>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<url-pattern>/restful-services/1.0/datasets/list/persist</url-pattern>
		<url-pattern>/restful-services/federateddataset/federation</url-pattern>
		<url-pattern>/restful-services/federateddataset/insertNoDup</url-pattern>
		<url-pattern>/restful-services/1.0/documents/saveChartTemplate</url-pattern>
	</filter-mapping>
	<!-- HMAC filter ends -->

	<!-- START LISTENERS -->
	<listener>
		<listener-class>it.eng.spagobi.tools.scheduler.listeners.SchedulerContextListener</listener-class>
	</listener>
	<listener>
		<listener-class>it.eng.spagobi.utilities.locks.listeners.HazelcastContextListener</listener-class>
	</listener>

	<!-- EXO
	<listener>
		<listener-class>org.exoplatform.services.portletcontainer.impl.servlet.PortletApplicationListener</listener-class>
	</listener>
	EXO -->

	<!--
		Enable WADL support.

		The following configuration create the endpoint:

		<pre>/<<context name>>/application.xml</pre>

		To get the WADL descriptor.
	 -->
	<!--
	<servlet>
		<servlet-name>RESTEasy WADL</servlet-name>
		<servlet-class>org.jboss.resteasy.wadl.ResteasyWadlServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>RESTEasy WADL</servlet-name>
		<url-pattern>/application.xml</url-pattern>
	</servlet-mapping>
	 -->

	<!-- START-LIFERAY
	<servlet>
		<servlet-name>PortletWrapper</servlet-name>
		<servlet-class>com.liferay.portal.kernel.servlet.PortletServlet</servlet-class>
	</servlet>
	END-LIFERAY -->

	<!-- servlet for change pwd management -->
	<servlet>
		<servlet-name>ChangePwdServlet</servlet-name>
		<servlet-class>it.eng.spagobi.commons.services.ChangePwdServlet</servlet-class>
	</servlet>

	<!-- Notifications and CometD servlets-->
	<servlet>
		<servlet-name>NotifierServlet</servlet-name>
		<servlet-class>it.eng.spagobi.tools.dataset.notifier.NotifierServlet</servlet-class>

		<init-param>
			<param-name>notifyUrl</param-name>
			<param-value>http://192.168.28.183:8080/knowage/datasetNotifier</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>cometDInitializer</servlet-name>
		<servlet-class>it.eng.spagobi.tools.dataset.listener.CometDInitializer</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>cometd</servlet-name>
		<servlet-class>org.cometd.server.CometDServlet</servlet-class>
		<init-param>
			<param-name>ws.cometdURLMapping</param-name>
			<param-value>/cometd/*</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>

	<servlet-mapping>
		<servlet-name>cometd</servlet-name>
		<url-pattern>/cometd/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>NotifierServlet</servlet-name>
		<url-pattern>/datasetNotifier</url-pattern>
	</servlet-mapping>
	<!-- Notifications and CometD servlets end-->

	<servlet>
		<servlet-name>ExtendSessionServlet</servlet-name>
		<servlet-class>it.eng.spagobi.utilities.servlet.session.ExtendSessionServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>QuartzInitializer</servlet-name>
		<servlet-class>org.quartz.ee.servlet.QuartzInitializerServlet</servlet-class>
		<init-param>
			<param-name>shutdown-on-unload</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>start-scheduler-on-load</param-name>
			<param-value>false</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet>
		<servlet-name>ConfigServlet</servlet-name>
		<servlet-class>it.eng.spago.configuration.ConfigServlet</servlet-class>
		<init-param>
			<param-name>AF_CONFIG_FILE</param-name>
			<param-value>/WEB-INF/conf/master.xml</param-value>
		</init-param>
		<load-on-startup>0</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>AdapterHTTP</servlet-name>
		<servlet-class>it.eng.spago.dispatching.httpchannel.AdapterHTTP</servlet-class>
	</servlet>

	<!-- This will start up all Admin4J Servlets with standard defaults.
	<servlet>
		<servlet-name>Admin4J Index Servlet</servlet-name>
		<servlet-class>net.admin4j.ui.servlets.Admin4JHomePageServlet</servlet-class>
	 	<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>Admin4J Index Servlet</servlet-name>
		<url-pattern>/admin4j/index</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Admin4J Index Servlet</servlet-name>
		<url-pattern>/admin4j/index/*</url-pattern>
	</servlet-mapping> -->

	<!-- will ensure that standard Admin4J filters are invoked in the proper order.
	<filter>
		<filter-name>Admin4J Standard Filter</filter-name>
		<filter-class>
			net.admin4j.ui.filters.Admin4JStandardFilter
		</filter-class>
		<init-param>
			<description>If true, includes a server-side timestamp in all returned html.</description>
			<param-name>include.serverside.timestamp</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>Admin4J Standard Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->

	<!-- EXO
	<servlet>
		<servlet-name>PortletWrapper</servlet-name>
		<servlet-class>org.exoplatform.services.portletcontainer.impl.servlet.ServletWrapper</servlet-class>
	</servlet>
	EXO -->

	<!-- start axis servlet -->
	<servlet>
		<servlet-name>AxisServlet</servlet-name>
		<servlet-class>org.apache.axis.transport.http.AxisServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>AdminServlet</servlet-name>
		<servlet-class>org.apache.axis.transport.http.AdminServlet</servlet-class>
		<load-on-startup>100</load-on-startup>
	</servlet>
	<!-- end axis servlet -->

	<servlet>
		<servlet-name>StickyCaptcha</servlet-name>
		<servlet-class>it.eng.spagobi.commons.services.KnowageCaptchaServlet</servlet-class>
		<init-param>
			<param-name>captcha-width</param-name>
			<param-value>250</param-value>
		</init-param>
		<init-param>
			<param-name>captcha-height</param-name>
			<param-value>75</param-value>
		</init-param>

	</servlet>

	<!-- START SERVLET MAPPINGS -->

	<!-- START-LIFERAY
	<servlet-mapping>
		<servlet-name>PortletWrapper</servlet-name>
		<url-pattern>/PortletWrapper</url-pattern>
	</servlet-mapping>
	END-LIFERAY -->

	<servlet-mapping>
		<servlet-name>StickyCaptcha</servlet-name>
		<url-pattern>/stickyImg</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>ChangePwdServlet</servlet-name>
		<url-pattern>/ChangePwdServlet</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>ExtendSessionServlet</servlet-name>
		<url-pattern>/servlet/ExtendSession</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>AdapterHTTP</servlet-name>
		<url-pattern>/servlet/AdapterHTTP</url-pattern>
		<url-pattern>/public/servlet/AdapterHTTP</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>AxisServlet</servlet-name>
		<url-pattern>/servlet/AxisServlet</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>AxisServlet</servlet-name>
		<url-pattern>*.jws</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>AxisServlet</servlet-name>
		<url-pattern>/services/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>AxisServlet</servlet-name>
		<url-pattern>/sdk/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>AdminServlet</servlet-name>
		<url-pattern>/servlet/AdminServlet</url-pattern>
	</servlet-mapping>
	<!-- end axis servlet -->

	<!-- END SERVLET MAPPINGS -->

	<!-- OTHER CONFIGURATIONS -->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>	
	</welcome-file-list>
	<!--
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/WEB-INF/jsp/commons/genericError.jsp</location>
	</error-page>

	<error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/jsp/commons/genericError.jsp</location>
	</error-page>

	<error-page>
		<error-code>500</error-code>
		<location>/WEB-INF/jsp/commons/genericError.jsp</location>
	</error-page>

	<env-entry>
		<env-entry-name>resource_path</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value>C:\logx\knowage</env-entry-value>
	</env-entry>
	<env-entry>
		<env-entry-name>service_url</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value>http://localhost:7001/knowage</env-entry-value>
	</env-entry>
	<env-entry>
		<env-entry-name>hmacKey</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value>abc123</env-entry-value>
	</env-entry>
	<env-entry>
		<env-entry-name>sso_class</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value>it.eng.spagobi.services.common.FakeSsoService</env-entry-value>
	</env-entry>
	<env-entry>
		<env-entry-name>host_url</env-entry-name>
		<env-entry-type>java.lang.String</env-entry-type>
		<env-entry-value>http://localhost:7001</env-entry-value>
	</env-entry>
	-->

	<!-- SOAP services -->
	<listener>
		<listener-class>com.sun.xml.ws.transport.http.servlet.WSServletContextListener</listener-class>
	</listener>
	<servlet>
		<servlet-name>SoapServlet</servlet-name>
		<servlet-class>com.sun.xml.ws.transport.http.servlet.WSServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>SoapServlet</servlet-name>
		<url-pattern>/services/SecurityService</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>SoapServlet</servlet-name>
		<url-pattern>/services/ArtifactService</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>SoapServlet</servlet-name>
		<url-pattern>/services/AuditService</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>SoapServlet</servlet-name>
		<url-pattern>/services/ContentService</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>SoapServlet</servlet-name>
		<url-pattern>/services/DataSetService</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>SoapServlet</servlet-name>
		<url-pattern>/services/DataSourceService</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>SoapServlet</servlet-name>
		<url-pattern>/services/EventService</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>SoapServlet</servlet-name>
		<url-pattern>/services/MetamodelService</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>SoapServlet</servlet-name>
		<url-pattern>/services/SchedulerService</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>SoapServlet</servlet-name>
		<url-pattern>/services/SbiDocumentService</url-pattern>
	</servlet-mapping>

	<!-- START TOMCAT RES -->
	<resource-ref id="knowageds_core">
		<description>
		</description>
		<res-ref-name>knowageds</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
		<res-sharing-scope>Shareable</res-sharing-scope>
	</resource-ref>
	<!-- END TOMCAT RES -->

	<!-- 
		This servlet comes from resteasy-jaxrs and is enabled by default mapped to "" URL. The empty string has
		greater priority than "/": that is a big problem for us because our WARs have mixed resources, REST
		services, JSPs, HTMLs, etc... The following disables this servlet.
	 -->
	<servlet-mapping>
		<servlet-name>org.jboss.resteasy.plugins.server.servlet.HttpServlet30Dispatcher</servlet-name>
		<url-pattern>/restful-services-default</url-pattern>
	</servlet-mapping>

</web-app>