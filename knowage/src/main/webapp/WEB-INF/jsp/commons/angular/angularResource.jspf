<%-- ---------------------------------------------------------------------- --%>
<%-- JAVA IMPORTS															--%>
<%-- ---------------------------------------------------------------------- --%>

<!-- this imports are used for language controls  -->
<%@page import="it.eng.spagobi.commons.bo.SessionUserProfile"%>
<%@page import="it.eng.spago.configuration.ConfigSingleton"%>
<%@page import="it.eng.spago.base.*"%>
<%@page import="it.eng.spagobi.commons.utilities.urls.IUrlBuilder"%>
<%@page import="it.eng.spagobi.commons.utilities.messages.IMessageBuilder"%>
<%@page import="it.eng.spagobi.commons.utilities.messages.MessageBuilder"%>
<%@page import="it.eng.spagobi.commons.utilities.messages.MessageBuilderFactory"%>
<%@page import="it.eng.spagobi.commons.utilities.urls.UrlBuilderFactory"%>
<%@page import="java.util.Locale"%>
<%@page import="it.eng.spagobi.commons.constants.SpagoBIConstants"%>
<%@page import="it.eng.spagobi.commons.utilities.PortletUtilities"%>
<%@page import="it.eng.spago.security.IEngUserProfile" %>
<%@page import="it.eng.spagobi.commons.utilities.UserUtilities" %>
<%@page import="it.eng.knowage.commons.security.KnowageSystemConfiguration"%>
<%@page import="org.apache.commons.lang.StringEscapeUtils"%>
<%@page import="it.eng.spagobi.commons.bo.UserProfile"%>
<%@page import="java.util.List"%>
<%@page import="java.util.ArrayList"%>
<%@page import="it.eng.spagobi.utilities.themes.ThemesManager"%>
<%@page import="it.eng.spagobi.commons.bo.AccessibilityPreferences" %>
<%@page import="org.apache.commons.lang.StringUtils" %>
<%@page import="java.util.Locale.Builder" %>

<%
	RequestContainer aRequestContainer = null;
	ResponseContainer aResponseContainer = null;
	SessionContainer aSessionContainer = null;
	IUrlBuilder urlBuilder = null;
	IMessageBuilder msgBuilder = null;
	String sbiMode = null;
		
	// case of portlet mode
	aRequestContainer = RequestContainerPortletAccess.getRequestContainer(request);
	aResponseContainer = ResponseContainerPortletAccess.getResponseContainer(request);
	if (aRequestContainer == null) {
		// case of web mode
		aRequestContainer = RequestContainer.getRequestContainer();
		if(aRequestContainer == null){
			//case of REST 
			aRequestContainer = RequestContainerAccess.getRequestContainer(request);
		}
		aResponseContainer = ResponseContainer.getResponseContainer();
		if(aResponseContainer == null){
			//case of REST
			aResponseContainer = ResponseContainerAccess.getResponseContainer(request);
		}
	}
	
	String channelType = aRequestContainer.getChannelType();
	if ("PORTLET".equalsIgnoreCase(channelType)) sbiMode = "PORTLET";
	else sbiMode = "WEB";
	
	// create url builder 
	urlBuilder = UrlBuilderFactory.getUrlBuilder(sbiMode);
	
	// create message builder
	msgBuilder = MessageBuilderFactory.getMessageBuilder();
	
	//get the current theme name
	String currTheme = ThemesManager.getCurrentTheme(aRequestContainer);
	if (currTheme == null)
		currTheme = ThemesManager.getDefaultTheme();
	
	// get other spago object
	SourceBean aServiceRequest = aRequestContainer.getServiceRequest();
	SourceBean aServiceResponse = aResponseContainer.getServiceResponse();
	aSessionContainer = aRequestContainer.getSessionContainer();
	SessionContainer permanentSession = aSessionContainer.getPermanentContainer();
	
	// If Language is alredy defined keep it
	String curr_language=(String)permanentSession.getAttribute(SpagoBIConstants.AF_LANGUAGE);
	String curr_country=(String)permanentSession.getAttribute(SpagoBIConstants.AF_COUNTRY);
	String sessScript = (String) permanentSession.getAttribute(SpagoBIConstants.AF_SCRIPT);
	String curr_script = (sessScript!=null && !sessScript.isEmpty()) ? sessScript : "";
	Locale locale = null;
	
	if (curr_language != null && curr_country != null	&& !curr_language.equals("") && !curr_country.equals("")) {
		Builder tmpLocale = new Locale.Builder().setLanguage(curr_language).setRegion(curr_country);

		if (StringUtils.isNotBlank(curr_script)) {
			tmpLocale.setScript(curr_script);
		}

		locale = tmpLocale.build();
	} else {
		if (sbiMode.equals("PORTLET")) {
			locale = PortletUtilities.getLocaleForMessage();
		} else {
			locale = MessageBuilder.getBrowserLocaleFromSpago();
		}
		// updates locale information on permanent container for Spago messages mechanism
		if (locale != null) {
			permanentSession.setAttribute(Constants.USER_LANGUAGE, locale.getLanguage());
			permanentSession.setAttribute(Constants.USER_COUNTRY, locale.getCountry());
		}
	}
	
	//load user profile 
	IEngUserProfile userProfile = (IEngUserProfile)permanentSession.getAttribute(IEngUserProfile.ENG_USER_PROFILE);
	if(userProfile == null){
		userProfile = (IEngUserProfile) request.getSession().getAttribute(IEngUserProfile.ENG_USER_PROFILE);
    }
	
	String userUniqueIdentifier="";
	String userId="";
	String userName="";
	String sessionRole="";
	List userRoles = new ArrayList();
	
	//if (userProfile!=null) userId=(String)userProfile.getUserUniqueIdentifier();
	if (userProfile!=null){
		userId=(String)((UserProfile)userProfile).getUserId();
		userUniqueIdentifier=(String)userProfile.getUserUniqueIdentifier();
		userName=(String)((UserProfile)userProfile).getUserName();
		userRoles = (ArrayList)userProfile.getRoles();
		sessionRole = userProfile instanceof SessionUserProfile ? ((SessionUserProfile)userProfile).getSessionRole() : null;		
		
	}
	
	ConfigSingleton serverConfig = ConfigSingleton.getInstance();

	Integer importFileMaxSizeMB = 10 * 1024 * 1024;
	SourceBean maxSizeSB = (SourceBean) serverConfig.getAttribute("IMPORTEXPORT.IMPORT_FILE_MAX_SIZE");
	if (maxSizeSB != null) {
		String maxSizeStr = maxSizeSB.getCharacters();
		importFileMaxSizeMB = new Integer(maxSizeStr);
	}
	
	 AccessibilityPreferences ap =  UserUtilities.readAccessibilityPreferencesByUser((UserProfile)userProfile);
	  
	  boolean includeInfusion;
	  if(ap != null){
	      includeInfusion=ap.isEnableUio();
	  }else{
		  includeInfusion=false;
	  }
	
%>
<%-- ---------------------------------------------------------------------- --%>
<%-- INFUSION																--%>
<%-- ---------------------------------------------------------------------- --%>

	 <%if(includeInfusion){ %> 
       <%@include file="/WEB-INF/jsp/commons/infusion/infusionImport.jsp"%>
      
     <%} %>	


<%@include file="/WEB-INF/jsp/commons/includeMessageResource.jspf"%>
